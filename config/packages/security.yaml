security:
    encoders:
      App\Entity\User:
        algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
      our_db_provider:
        entity:
          class: App\Entity\User
          property: username
      in_memory:
        memory:
          users:
            user:
              password: $2y$12$VmaWuxVsn6GURyQCh.HppOBKYsHfdk6LbWGlm1o/YV75VEz/vHT8W # 123
              roles: "ROLE_USER"
            admin:
              password: $2y$12$qkZiGvjdiDy8wfURzfxdyu4SYZ2ApB.jY8sYuysD4V9rPdGjxMCYW # admin
              roles: "ROLE_ADMIN"

    firewalls:
        api:
          pattern: ^/api/
          provider: our_db_provider
          guard:
            authenticators:
              - App\Security\TokenAuthenticator
        dev:
          pattern: ^/(_(profiler|wdt)|css|images|js)/
          security: false

        main:
          anonymous: true
          http_basic: ~
          provider: our_db_provider

          # activate different ways to authenticate

          # http_basic: true
          # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

          # form_login: true
          # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
      - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: ^/admin, roles: ROLE_ADMIN }
      - { path: ^/api/*, roles: ROLE_API_USER }
